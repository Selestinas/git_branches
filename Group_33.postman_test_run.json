{
	"id": "4bc60d05-6000-4760-a9d2-fa0ed419ff0c",
	"name": "Group_33",
	"timestamp": "2023-03-15T19:31:42.282Z",
	"collection_id": "24132776-0c9e13af-6237-448a-ac34-962a8adddb76",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 15,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2023-03-15T19:31:38.770Z",
	"totalFail": 0,
	"results": [
		{
			"id": "d0d31924-fe6e-488f-8710-2eab4bb758b8",
			"name": "EP_1",
			"url": "http://162.55.220.72:5005/get_method?name=Christina&age=33",
			"time": 169,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				169
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "26d4263f-1fad-4c0b-bcbf-176a898f4b2e",
			"name": "EP_2",
			"url": "http://162.55.220.72:5005/user_info_3",
			"time": 190,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				190
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "1372fd7f-fb73-4ed6-afa4-614478f03e4f",
			"name": "EP_3",
			"url": "http://162.55.220.72:5005/object_info_1?name=Christina&age=33&weight=45",
			"time": 185,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				185
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "ad94c227-5c90-42d6-9c27-9ea4b3a5f35f",
			"name": "EP_4",
			"url": "http://162.55.220.72:5005/object_info_2?name=Christina&age=33&salary=1500",
 		"time": 280,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				280
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "ebb69f22-e07a-4973-af82-deba18fb5ba0",
			"name": "EP_5",
			"url": "http://162.55.220.72:5005/object_info_3?name=Christina&age=33&salary=1500",
			"time": 164,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				164
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "106c6f2d-7e20-41ec-aeba-b3acaef60c79",
			"name": "EP_6",
			"url": "http://162.55.220.72:5005/object_info_4?name=Christina&age=33&salary=1500",
			"time": 168,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				168
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "4c8a367a-1446-454d-b8ba-a03da93cc5f5",
			"name": "EP_7",
			"url": "http://162.55.220.72:5005/user_info_2",
			"time": 163,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				163
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "91bee270-ff9f-4f29-82d9-603d70edec94",
			"name": "1",
			"url": "http://162.55.220.72:5005/first",
			"time": 176,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				176
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "ac384aaa-9039-4e29-9057-1d707784daa7",
			"name": "2",
			"url": "http://162.55.220.72:5005/user_info_3",
			"time": 180,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Req_Resp_name_check": true,
				"Req_Resp_age_check": true,
				"Req_Resp_salary_check": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Req_Resp_name_check": {
					"pass": 1,
					"fail": 0
				},
				"Req_Resp_age_check": {
					"pass": 1,
					"fail": 0
				},
				"Req_Resp_salary_check": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				180
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Req_Resp_name_check": true,
					"Req_Resp_age_check": true,
					"Req_Resp_salary_check": true
				}
			]
		},
		{
			"id": "9513636b-7d19-4ce2-905c-943ca2d10db8",
			"name": "3",
			"url": "http://162.55.220.72:5005/object_info_3?name=Alena&age=33&salary=500",
			"time": 170,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Req_name_chek": true,
				"Req_age_chek": true,
				"Req_salary_chek": true,
				"Dog_name": true,
				"Dog_age": true,
				"name_check": true,
				"age_check": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Req_name_chek": {
					"pass": 1,
					"fail": 0
				},
				"Req_age_chek": {
					"pass": 1,
					"fail": 0
				},
				"Req_salary_chek": {
					"pass": 1,
					"fail": 0
				},
				"Dog_name": {
					"pass": 1,
					"fail": 0
				},
				"Dog_age": {
					"pass": 1,
					"fail": 0
				},
				"name_check": {
					"pass": 1,
					"fail": 0
				},
				"age_check": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				170
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Req_name_chek": true,
					"Req_age_chek": true,
					"Req_salary_chek": true,
					"Dog_name": true,
					"Dog_age": true,
					"name_check": true,
					"age_check": true
				}
			]
		},
		{
			"id": "b047eafa-e7f9-4d6c-af26-4347ea1f1b18",
			"name": "login",
			"url": "http://162.55.220.72:5005/login",
			"time": 187,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				187
			],
			"allTests": [
				{}
			]
		}
	],
	"count": 1,
	"totalTime": 2032,
	"collection": {
		"requests": [
			{
				"id": "d0d31924-fe6e-488f-8710-2eab4bb758b8",
				"method": "GET"
			},
			{
				"id": "26d4263f-1fad-4c0b-bcbf-176a898f4b2e",
				"method": "POST"
			},
			{
				"id": "1372fd7f-fb73-4ed6-afa4-614478f03e4f",
				"method": "GET"
			},
			{
				"id": "ad94c227-5c90-42d6-9c27-9ea4b3a5f35f",
				"method": "GET"
			},
			{
				"id": "ebb69f22-e07a-4973-af82-deba18fb5ba0",
				"method": "GET"
			},
			{
				"id": "106c6f2d-7e20-41ec-aeba-b3acaef60c79",
				"method": "GET"
			},
			{
				"id": "4c8a367a-1446-454d-b8ba-a03da93cc5f5",
				"method": "POST"
			},
			{
				"id": "91bee270-ff9f-4f29-82d9-603d70edec94",
				"method": "GET"
			},
			{
				"id": "ac384aaa-9039-4e29-9057-1d707784daa7",
				"method": "POST"
			},
			{
				"id": "9513636b-7d19-4ce2-905c-943ca2d10db8",
				"method": "GET"
			},
			{
				"id": "b047eafa-e7f9-4d6c-af26-4347ea1f1b18",
				"method": "POST"
			}
		]
	}
}
 http://162.55.220.72:5005/user_info_3
//1. Отправить запрос.
//2. Статус код 200
 pm.test("Status code is 200", function () {
 pm.response.to.have.status(200);
});
console.log("Status code is 200")
// 3. Спарсить response body в json.
var jsonData = pm.response.json();
console.log(jsonData)
// 4. Проверить, что name в ответе равно name s request (name вбить руками.)

pm.test("Req_Resp_name_check", function () {
pm.expect(jsonData.name).to.eql("Anna");
});
// 5. Проверить, что age в ответе равно age s request (age вбить руками.)

pm.test("Req_Resp_age_check", function () {
pm.expect(jsonData.age).to.eql("33");
});

// // 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)

pm.test("Req_Resp_name_check", function () {
 pm.expect(jsonData.salary).to.eql(1500);
});
// // 7. Спарсить request.
 var jsonData = pm.response.json();
// 8. Проверить, что name в ответе равно name s request (name забрать из request.)
var jsonData = pm.response.json();
var resp_name = jsonData.name;

var req = request.data;
var req_name = req.name;
console.log("Resp_name = ",  resp_name)
console.log("Req_name = ", req_name)


    pm.test("Req_Resp_name_check", function () {
        var jsonData = pm.response.json();
        pm.expect(jsonData.name).to.eql(req_name);
    });
// // 9. Проверить, что age в ответе равно age s request (age забрать из request.)
var jsonData = pm.response.json();
var resp_age = jsonData.age;

var req = request.data;
var req_age = req.age;
console.log("Resp_age = " , resp_age)
console.log("Req_age = ", req_age)


    pm.test("Req_Resp_age_check", function () {
       pm.expect(jsonData.age).to.eql(req_age);
});
// // 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
var jsonData = pm.response.json();
var resp_salary = jsonData.salary;

var req = request.data;
var req_salary = + req.salary;
console.log("Resp_salary = " , resp_salary)
console.log("Req_salary = ", req_salary)


pm.test("Req_Resp_salary_check", function (){
pm.expect(jsonData.salary).to.eql(req_salary);
});

// 11. Вывести в консоль параметр family из response.
var resp_family = jsonData.family
console.log("Resp_family=", resp_family);

// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)

var jsonData = pm.response.json();
var req_u_salary_1_5_year = jsonData.salary*4;


var req = request.data;
var req_u_salary_1_5_year = + req.salary*4;

console.log("Req_u_salary_1_5_year = ",  req.salary*4)
